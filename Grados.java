/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package regla_falsa_trigonometrica;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author MAYRA
 */
public class Grados extends javax.swing.JPanel {

    static double xa = 0, xb = 0, xrm = 0, xr, fxa = 0, fxr = 0, count, xrn = 0, fxav, fxb, xrw, XRN = 0, XRNV = 0, ERROR = 0, comp = 0;
    static double valor = 0, valor1 = 0, valor2 = 0, valor3 = 0, valor4 = 0, valor5 = 0, valor6 = 0, intervalo1 = 0, intervalo2 = 0, err = 0;
    static int redondeo = 0;

    /**
     * Creates new form Grados
     */
    public Grados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrupogrados = new javax.swing.ButtonGroup();
        txtconstante = new javax.swing.JTextField();
        lblConstante = new javax.swing.JLabel();
        txtgrado1 = new javax.swing.JTextField();
        lblGrado1 = new javax.swing.JLabel();
        lblGrado2 = new javax.swing.JLabel();
        txtgrado2 = new javax.swing.JTextField();
        lblGrado3 = new javax.swing.JLabel();
        txtgrado3 = new javax.swing.JTextField();
        lblGrado4 = new javax.swing.JLabel();
        txtgrado4 = new javax.swing.JTextField();
        lblGrado5 = new javax.swing.JLabel();
        txtgrado5 = new javax.swing.JTextField();
        lblGrado6 = new javax.swing.JLabel();
        txtgrado6 = new javax.swing.JTextField();
        lblError = new javax.swing.JLabel();
        txterror = new javax.swing.JTextField();
        lblDecimales = new javax.swing.JLabel();
        txtredondeo = new javax.swing.JTextField();
        lblIntervalo1 = new javax.swing.JLabel();
        lblIntervalo2 = new javax.swing.JLabel();
        txtintervalo1 = new javax.swing.JTextField();
        txtintervalo2 = new javax.swing.JTextField();
        btncalcular = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbfuncion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        rbtngrados = new javax.swing.JRadioButton();
        rbtngms = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtgrados1 = new javax.swing.JTextField();
        txtminutos = new javax.swing.JTextField();
        txtsegundos = new javax.swing.JTextField();
        txtgrados2 = new javax.swing.JTextField();
        txtminutos1 = new javax.swing.JTextField();
        txtsegundos1 = new javax.swing.JTextField();
        lblIntervalo3 = new javax.swing.JLabel();
        lblIntervalo4 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(600, 600));
        setMinimumSize(new java.awt.Dimension(600, 600));

        txtconstante.setMaximumSize(new java.awt.Dimension(55, 22));
        txtconstante.setMinimumSize(new java.awt.Dimension(55, 22));
        txtconstante.setPreferredSize(new java.awt.Dimension(55, 22));
        txtconstante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtconstanteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtconstanteKeyTyped(evt);
            }
        });

        lblConstante.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblConstante.setText("Constante");
        lblConstante.setMinimumSize(new java.awt.Dimension(63, 16));
        lblConstante.setPreferredSize(new java.awt.Dimension(63, 16));

        txtgrado1.setMaximumSize(null);
        txtgrado1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado1KeyTyped(evt);
            }
        });

        lblGrado1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGrado1.setText("1°Grado");
        lblGrado1.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado1.setPreferredSize(new java.awt.Dimension(63, 16));

        lblGrado2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGrado2.setText("2°Grado");
        lblGrado2.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado2.setPreferredSize(new java.awt.Dimension(63, 16));

        txtgrado2.setMaximumSize(null);
        txtgrado2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado2KeyTyped(evt);
            }
        });

        lblGrado3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGrado3.setText("3°Grado");
        lblGrado3.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado3.setPreferredSize(new java.awt.Dimension(63, 16));

        txtgrado3.setMaximumSize(null);
        txtgrado3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgrado3ActionPerformed(evt);
            }
        });
        txtgrado3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado3KeyTyped(evt);
            }
        });

        lblGrado4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGrado4.setText("4°Grado");
        lblGrado4.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado4.setPreferredSize(new java.awt.Dimension(63, 16));

        txtgrado4.setMaximumSize(null);
        txtgrado4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado4KeyTyped(evt);
            }
        });

        lblGrado5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGrado5.setText("5°Grado");
        lblGrado5.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado5.setPreferredSize(new java.awt.Dimension(63, 16));

        txtgrado5.setMaximumSize(null);
        txtgrado5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado5KeyTyped(evt);
            }
        });

        lblGrado6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGrado6.setText("6°Grado");
        lblGrado6.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado6.setPreferredSize(new java.awt.Dimension(63, 16));

        txtgrado6.setMaximumSize(null);
        txtgrado6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado6KeyTyped(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblError.setText("Error deseado");
        lblError.setMaximumSize(new java.awt.Dimension(55, 22));
        lblError.setMinimumSize(new java.awt.Dimension(55, 22));
        lblError.setName(""); // NOI18N

        txterror.setMaximumSize(new java.awt.Dimension(55, 22));
        txterror.setMinimumSize(new java.awt.Dimension(55, 22));
        txterror.setName(""); // NOI18N
        txterror.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txterrorActionPerformed(evt);
            }
        });
        txterror.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txterrorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txterrorKeyTyped(evt);
            }
        });

        lblDecimales.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDecimales.setText("N° Redondeo");
        lblDecimales.setMaximumSize(new java.awt.Dimension(55, 22));
        lblDecimales.setMinimumSize(new java.awt.Dimension(55, 22));
        lblDecimales.setName(""); // NOI18N

        txtredondeo.setMaximumSize(new java.awt.Dimension(55, 22));
        txtredondeo.setMinimumSize(new java.awt.Dimension(55, 22));
        txtredondeo.setName(""); // NOI18N
        txtredondeo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtredondeoActionPerformed(evt);
            }
        });
        txtredondeo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtredondeoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtredondeoKeyTyped(evt);
            }
        });

        lblIntervalo1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblIntervalo1.setText("Intervalo 1");
        lblIntervalo1.setToolTipText("");

        lblIntervalo2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblIntervalo2.setText("Intervalo 2");
        lblIntervalo2.setToolTipText("");

        txtintervalo1.setPreferredSize(new java.awt.Dimension(55, 22));
        txtintervalo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtintervalo1ActionPerformed(evt);
            }
        });
        txtintervalo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtintervalo1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtintervalo1KeyTyped(evt);
            }
        });

        txtintervalo2.setPreferredSize(new java.awt.Dimension(55, 22));
        txtintervalo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtintervalo2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtintervalo2KeyTyped(evt);
            }
        });

        btncalcular.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncalcular.setText("Calcular");
        btncalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalcularActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Grados");

        cbfuncion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbfuncion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seno", "Coseno", "Tangente", "Contangente", "Secante", "Cosecante" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Escoge la funcion trigonometrica");

        btngrupogrados.add(rbtngrados);
        rbtngrados.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbtngrados.setText("Grados");
        rbtngrados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtngradosActionPerformed(evt);
            }
        });

        btngrupogrados.add(rbtngms);
        rbtngms.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rbtngms.setText("Grados,Minutos,Segundos");
        rbtngms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtngmsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Selecciona el modo a manejar los datos");

        lblIntervalo3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblIntervalo3.setText("Intervalo 1");
        lblIntervalo3.setToolTipText("");

        lblIntervalo4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblIntervalo4.setText("Intervalo 2");
        lblIntervalo4.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblConstante, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(lblGrado1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(lblGrado2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(lblGrado3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(lblGrado4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(lblGrado5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)
                                        .addComponent(lblGrado6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtconstante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(7, 7, 7)
                                                .addComponent(txtgrado1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(7, 7, 7)
                                                .addComponent(txtgrado2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(10, 10, 10)
                                                    .addComponent(txtredondeo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(lblDecimales, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(7, 7, 7)
                                        .addComponent(txtgrado3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(txtgrado4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtgrado5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(13, 13, 13)
                                                .addComponent(txtgrado6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addComponent(cbfuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(btncalcular)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtintervalo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblIntervalo1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtgrados2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtintervalo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(49, 49, 49)
                                            .addComponent(txtgrados1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblIntervalo2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtminutos, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtminutos1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtsegundos, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtsegundos1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblIntervalo3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblIntervalo4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txterror, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbtngrados)
                                .addGap(31, 31, 31)
                                .addComponent(rbtngms))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblConstante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrado6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtconstante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrado3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrado4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrado5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrado6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDecimales, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(txterror, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtredondeo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbfuncion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtngrados)
                    .addComponent(rbtngms))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIntervalo1)
                    .addComponent(lblIntervalo2)
                    .addComponent(lblIntervalo3))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtintervalo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtintervalo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtgrados1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtminutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtsegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btncalcular))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblIntervalo4)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtgrados2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtminutos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsegundos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtconstanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconstanteKeyTyped

    }//GEN-LAST:event_txtconstanteKeyTyped

    private void txtgrado1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado1KeyTyped

    }//GEN-LAST:event_txtgrado1KeyTyped

    private void txtgrado2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado2KeyTyped

    }//GEN-LAST:event_txtgrado2KeyTyped

    private void txtgrado3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgrado3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgrado3ActionPerformed

    private void txtgrado3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado3KeyTyped

    }//GEN-LAST:event_txtgrado3KeyTyped

    private void txtgrado4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado4KeyTyped

    }//GEN-LAST:event_txtgrado4KeyTyped

    private void txtgrado5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado5KeyTyped

    }//GEN-LAST:event_txtgrado5KeyTyped

    private void txtgrado6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado6KeyTyped

    }//GEN-LAST:event_txtgrado6KeyTyped

    private void txterrorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txterrorKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txterrorKeyTyped

    private void txtredondeoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtredondeoKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtredondeoKeyTyped

    private void txtintervalo1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo1KeyTyped

    }//GEN-LAST:event_txtintervalo1KeyTyped

    private void txtintervalo2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo2KeyTyped

    }//GEN-LAST:event_txtintervalo2KeyTyped

    private void txtconstanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconstanteKeyReleased
        // TODO add your handling code here:
        //txtConstanteKeyReleased(evt);
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtconstante.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtconstanteKeyReleased

    private void btncalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalcularActionPerformed
        // TODO add your handling code here:
        count = 0;
        intervalo1=0;intervalo2=0;err=0;XRN=0;xr=0;
        String Valor = txtconstante.getText();//constate
        String Valor1 = txtgrado1.getText();//grado 1
        String Valor2 = txtgrado2.getText();//grado 2
        String Valor3 = txtgrado3.getText();//grado 3
        String Valor4 = txtgrado4.getText();//grado 4
        String Valor5 = txtgrado5.getText();//grado 5
        String Valor6 = txtgrado6.getText();//grado 6
        String error = txterror.getText();

        valor = Double.parseDouble(Valor);//conversion
        //System.out.println("VALORD: "+valor);
        valor1 = Double.parseDouble(Valor1);
        //System.out.println("Valor 1d: "+valor1);
        valor2 = Double.parseDouble(Valor2);
        //System.out.println("Valor 2d: "+valor2);
        valor3 = Double.parseDouble(Valor3);
        //System.out.println("ValorD3333333333333333: "+valor3);
        valor4 = Double.parseDouble(Valor4);
        valor5 = Double.parseDouble(Valor5);
        valor6 = Double.parseDouble(Valor6);

        //System.out.println("Digita valorr de a: ");
        if (rbtngrados.isSelected()) {
            String Xa = txtintervalo1.getText(); //xa=x0//llamamos el dato txtintervalo y lo metemos en una variable string
            xa = Double.parseDouble(Xa);//convertimos de string a double

            String Xb = txtintervalo2.getText(); //xb= x1
            xb = Double.parseDouble(Xb);

            intervalo1 = Math.toRadians(xa);//grado a radian
            intervalo2 = Math.toRadians(xb);

        } else {
            if (rbtngms.isSelected()) {

                String interg1 = txtgrados1.getText();
                Double grados = Double.parseDouble(interg1);

                String interg2 = txtgrados2.getText();
                Double grados2 = Double.parseDouble(interg2);

                String interm1 = txtminutos.getText();
                Double minutos = Double.parseDouble(interm1);

                String interm2 = txtminutos1.getText();
                Double minutos2 = Double.parseDouble(interm2);

                String inters1 = txtsegundos.getText();
                Double segundos = Double.parseDouble(inters1);

                String inters2 = txtsegundos1.getText();
                Double segundos2 = Double.parseDouble(inters2);

                Double op1 = (grados + ((minutos / 60) + (segundos / 3600)));
                Double op2 = (grados2 + ((minutos2 / 60) + (segundos2 / 3600)));

                intervalo1 = Math.toRadians(op1);//grado a radian

                intervalo2 = Math.toRadians(op2);

            }
        }

        // System.out.println("Digita valorr de b: ");
        // REDONDEO 
        String REDO = txtredondeo.getText();
        redondeo = Integer.parseInt(REDO);

        ERROR = Double.parseDouble(error);
        System.out.println("ERRR: " + ERROR);
        int se = cbfuncion.getSelectedIndex();
        switch (se) {//ojo con la variable raiz final 
            case 0://seno
                System.out.println("entraste al caso 0");
                seno();
                break;
            case 1://coseno
                coseno();
                break;
            case 2://tangente
                tangente();
                break;
            case 3://contangente
                contangente();
                break;
            case 4://Secante
                secante();
                break;
            case 5://Cosecante
                cosecante();
                break;
            default:
                throw new AssertionError();
        }


    }//GEN-LAST:event_btncalcularActionPerformed

    private void txtgrado1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado1KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado1.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado1KeyReleased

    private void txtgrado2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado2KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado2.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado2KeyReleased

    private void txtgrado3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado3KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado3.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado3KeyReleased

    private void txtgrado4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado4KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado4.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado4KeyReleased

    private void txtgrado5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado5KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado5.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado5KeyReleased

    private void txtgrado6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado6KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado6.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado6KeyReleased

    private void rbtngradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtngradosActionPerformed
        // TODO add your handling code here:
        txtgrados1.setEnabled(false);
        txtminutos.setEnabled(false);
        txtsegundos.setEnabled(false);
        txtgrados2.setEnabled(false);
        txtminutos1.setEnabled(false);
        txtsegundos1.setEnabled(false);

        txtintervalo1.setEnabled(true);
        txtintervalo2.setEnabled(true);


    }//GEN-LAST:event_rbtngradosActionPerformed

    private void rbtngmsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtngmsActionPerformed
        // TODO add your handling code here:

        txtgrados1.setEnabled(true);
        txtminutos.setEnabled(true);
        txtsegundos.setEnabled(true);
        txtgrados2.setEnabled(true);
        txtminutos1.setEnabled(true);
        txtsegundos1.setEnabled(true);

        txtintervalo1.setEnabled(false);
        txtintervalo2.setEnabled(false);

    }//GEN-LAST:event_rbtngmsActionPerformed

    private void txterrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txterrorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txterrorActionPerformed

    private void txtredondeoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtredondeoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtredondeoActionPerformed

    private void txtintervalo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtintervalo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtintervalo1ActionPerformed

    private void txtintervalo1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo1KeyReleased
        // TODO add your handling code here:

        String nombre = "^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtintervalo1.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);

            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
            txtgrados1.setEnabled(true);
            txtgrados2.setEnabled(true);
            txtminutos.setEnabled(true);
            txtminutos1.setEnabled(true);
            txtsegundos.setEnabled(true);
            txtsegundos1.setEnabled(true);

        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);

            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            txtgrados1.setEnabled(false);
            txtgrados2.setEnabled(false);
            txtminutos.setEnabled(false);
            txtminutos1.setEnabled(false);
            txtsegundos.setEnabled(false);
            txtsegundos1.setEnabled(false);

            return;
        }
    }//GEN-LAST:event_txtintervalo1KeyReleased

    private void txtintervalo2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo2KeyReleased
        // TODO add your handling code here:

        String nombre = "^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtintervalo2.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);

            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
            txtgrados1.setEnabled(false);
            txtgrados2.setEnabled(false);
            txtminutos.setEnabled(false);
            txtminutos1.setEnabled(false);
            txtsegundos.setEnabled(false);
            txtsegundos1.setEnabled(false);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);

            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            txtgrados1.setEnabled(false);
            txtgrados2.setEnabled(false);
            txtminutos.setEnabled(false);
            txtminutos1.setEnabled(false);
            txtsegundos.setEnabled(false);
            txtsegundos1.setEnabled(false);

            return;
        }
    }//GEN-LAST:event_txtintervalo2KeyReleased

    private void txterrorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txterrorKeyReleased
        // TODO add your handling code here:

        String nombre = "^[+-]?(\\d*\\.)?\\d+$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txterror.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);

            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);

            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txterrorKeyReleased

    private void txtredondeoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtredondeoKeyReleased
        // TODO add your handling code here:

        String nombre = "^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,2})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtredondeo.getText());
        if (match.find()) {

            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);

            return;
        }
    }//GEN-LAST:event_txtredondeoKeyReleased
    public void seno() {//ya esta
        System.out.println("------CONTADOR-----: " + count);
        fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar();
            }

        }

    }

    public void coseno() {//ya esta
        System.out.println("------CONTADOR-----: " + count);
        fxa = Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = Math.cos((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa2();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar2();
            }

        }

    }

    public void tangente() {//ya esta
        System.out.println("------CONTADOR-----: " + count);
        fxa = Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = Math.tan((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa3();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar3();
            }

        }

    }

    public void contangente() {
        System.out.println("------CONTADOR-----: " + count);
        fxa = (1 / Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = (1 / Math.tan((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor));
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa4();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar4();
            }

        }

    }

    public void secante() {
        System.out.println("------CONTADOR-----: " + count);
        fxa = (1 / Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = (1 / Math.cos((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor));
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa5();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar5();
            }

        }

    }

    public void cosecante() {//cosecante
        System.out.println("------CONTADOR-----: " + count);
        fxa = (1 / Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = (1 / Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor));
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa6();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar6();
            }

        }

    }

    public void regla_falsa() {//ya quedo

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }

    public void continuar() {//ya esta
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }

    public void continuar2() {//fuerza cos ya esta
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
             System.out.println("Error: " + err);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;

            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);
           
                //continue;//salta ala otra iteracion
            
                err = (Math.abs((XRN - intervalo1) / XRN) * 100);
               
                if (err <= ERROR) {
                    count++;
                    System.out.println("------CONTADOR------: " + count);
                    System.out.println("Raiz final: " + xr);
                    System.out.println("tu error final " + err);
                    return;
                } else {
                    intervalo1 = XRN;
                }
            
            //count++;
        } while (count <= 100);

    }

    public void continuar3() {//YA ESTA LISTO
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }//listo

    public void regla_falsa2() {//coseno ya esta

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//cos

    public void regla_falsa3() {//tan confirmar

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//TANGENTE

    public void regla_falsa4() {//contangente

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + XRN);//PUSIMOS XRN PORQUE SOLO ES EN FORMULAR NORMAL Y XR EN FORZAR
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//CONTANGENTE

    public void continuar4() {//contangente forzada
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }

    public void continuar5() {//secante forzada
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }//secante forzada

    public void continuar6() {//cosecante forzada
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }//secante forzada

    public void regla_falsa5() {//SECANTE

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + XRN);//PUSIMOS XRN PORQUE SOLO ES EN FORMULAR NORMAL Y XR EN FORZAR
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//secante

    public void regla_falsa6() {//COSECANTE

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + XRN);//PUSIMOS XRN PORQUE SOLO ES EN FORMULAR NORMAL Y XR EN FORZAR
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//secante

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncalcular;
    private javax.swing.ButtonGroup btngrupogrados;
    private javax.swing.JComboBox<String> cbfuncion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblConstante;
    private javax.swing.JLabel lblDecimales;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblGrado1;
    private javax.swing.JLabel lblGrado2;
    private javax.swing.JLabel lblGrado3;
    private javax.swing.JLabel lblGrado4;
    private javax.swing.JLabel lblGrado5;
    private javax.swing.JLabel lblGrado6;
    private javax.swing.JLabel lblIntervalo1;
    private javax.swing.JLabel lblIntervalo2;
    private javax.swing.JLabel lblIntervalo3;
    private javax.swing.JLabel lblIntervalo4;
    private javax.swing.JRadioButton rbtngms;
    private javax.swing.JRadioButton rbtngrados;
    private javax.swing.JTextField txtconstante;
    private javax.swing.JTextField txterror;
    private javax.swing.JTextField txtgrado1;
    private javax.swing.JTextField txtgrado2;
    private javax.swing.JTextField txtgrado3;
    private javax.swing.JTextField txtgrado4;
    private javax.swing.JTextField txtgrado5;
    private javax.swing.JTextField txtgrado6;
    private javax.swing.JTextField txtgrados1;
    private javax.swing.JTextField txtgrados2;
    private javax.swing.JTextField txtintervalo1;
    private javax.swing.JTextField txtintervalo2;
    private javax.swing.JTextField txtminutos;
    private javax.swing.JTextField txtminutos1;
    private javax.swing.JTextField txtredondeo;
    private javax.swing.JTextField txtsegundos;
    private javax.swing.JTextField txtsegundos1;
    // End of variables declaration//GEN-END:variables
}
