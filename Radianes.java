/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package regla_falsa_trigonometrica;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author MAYRA
 */
public class Radianes extends javax.swing.JPanel {

    static double xa = 0, xb = 0, xrm = 0, xr, fxa = 0, fxr = 0, count, xrn = 0, fxav, fxb, xrw, XRN = 0, XRNV = 0, ERROR = 0, comp = 0;
    static double valor = 0, valor1 = 0, valor2 = 0, valor3 = 0, valor4 = 0, valor5 = 0, valor6 = 0, intervalo1 = 0, intervalo2 = 0, err = 0;
    static int redondeo = 0;

    /**
     * Creates new form Radianes
     */
    public Radianes() {
        initComponents();

        txtnumerador1.setEnabled(false);
        txtnumerador2.setEnabled(false);
        txtdenominador1.setEnabled(false);
        txtdenominador2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGrado1 = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        lblGrado2 = new javax.swing.JLabel();
        txterror = new javax.swing.JTextField();
        lblDecimales = new javax.swing.JLabel();
        lblGrado3 = new javax.swing.JLabel();
        txtredondeo = new javax.swing.JTextField();
        lblIntervalo1 = new javax.swing.JLabel();
        lblGrado4 = new javax.swing.JLabel();
        lblIntervalo2 = new javax.swing.JLabel();
        lblGrado5 = new javax.swing.JLabel();
        lblConstante = new javax.swing.JLabel();
        lblGrado6 = new javax.swing.JLabel();
        cbfuncion = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btncalcular = new javax.swing.JButton();
        txtconstante = new javax.swing.JTextField();
        txtgrado1 = new javax.swing.JTextField();
        txtgrado2 = new javax.swing.JTextField();
        txtgrado3 = new javax.swing.JTextField();
        txtgrado4 = new javax.swing.JTextField();
        txtgrado5 = new javax.swing.JTextField();
        txtgrado6 = new javax.swing.JTextField();
        txtintervalo1 = new javax.swing.JTextField();
        txtintervalo2 = new javax.swing.JTextField();
        txtnumerador1 = new javax.swing.JTextField();
        txtdenominador1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblIntervalo3 = new javax.swing.JLabel();
        lblIntervalo4 = new javax.swing.JLabel();
        rbtnpirad = new javax.swing.JRadioButton();
        txtnumerador2 = new javax.swing.JTextField();
        txtdenominador2 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(600, 600));
        setMinimumSize(new java.awt.Dimension(600, 600));
        setPreferredSize(new java.awt.Dimension(600, 600));
        setLayout(null);

        lblGrado1.setText("1°Grado");
        lblGrado1.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado1.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblGrado1);
        lblGrado1.setBounds(76, 65, 55, 16);

        lblError.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblError.setText("Error deseado");
        lblError.setMaximumSize(new java.awt.Dimension(55, 22));
        lblError.setMinimumSize(new java.awt.Dimension(55, 22));
        lblError.setName(""); // NOI18N
        add(lblError);
        lblError.setBounds(10, 350, 100, 22);

        lblGrado2.setText("2°Grado");
        lblGrado2.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado2.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblGrado2);
        lblGrado2.setBounds(138, 65, 55, 16);

        txterror.setMaximumSize(new java.awt.Dimension(55, 22));
        txterror.setMinimumSize(new java.awt.Dimension(55, 22));
        txterror.setName(""); // NOI18N
        txterror.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txterrorKeyTyped(evt);
            }
        });
        add(txterror);
        txterror.setBounds(20, 380, 55, 22);

        lblDecimales.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDecimales.setText("N°Decimales");
        lblDecimales.setMaximumSize(new java.awt.Dimension(55, 22));
        lblDecimales.setMinimumSize(new java.awt.Dimension(55, 22));
        lblDecimales.setName(""); // NOI18N
        add(lblDecimales);
        lblDecimales.setBounds(120, 350, 90, 22);

        lblGrado3.setText("3°Grado");
        lblGrado3.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado3.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblGrado3);
        lblGrado3.setBounds(200, 65, 55, 16);

        txtredondeo.setMaximumSize(new java.awt.Dimension(55, 22));
        txtredondeo.setMinimumSize(new java.awt.Dimension(55, 22));
        txtredondeo.setName(""); // NOI18N
        txtredondeo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtredondeoKeyTyped(evt);
            }
        });
        add(txtredondeo);
        txtredondeo.setBounds(130, 380, 55, 22);

        lblIntervalo1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIntervalo1.setText("Intervalo 1");
        lblIntervalo1.setToolTipText("");
        add(lblIntervalo1);
        lblIntervalo1.setBounds(250, 270, 90, 20);

        lblGrado4.setText("4°Grado");
        lblGrado4.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado4.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblGrado4);
        lblGrado4.setBounds(262, 65, 55, 16);

        lblIntervalo2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIntervalo2.setText("Intervalo 2");
        lblIntervalo2.setToolTipText("");
        add(lblIntervalo2);
        lblIntervalo2.setBounds(350, 270, 90, 20);

        lblGrado5.setText("5°Grado");
        lblGrado5.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado5.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblGrado5);
        lblGrado5.setBounds(324, 65, 55, 16);

        lblConstante.setText("Constante");
        lblConstante.setMinimumSize(new java.awt.Dimension(63, 16));
        lblConstante.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblConstante);
        lblConstante.setBounds(14, 65, 55, 16);

        lblGrado6.setText("6°Grado");
        lblGrado6.setMinimumSize(new java.awt.Dimension(63, 16));
        lblGrado6.setPreferredSize(new java.awt.Dimension(63, 16));
        add(lblGrado6);
        lblGrado6.setBounds(392, 65, 55, 16);

        cbfuncion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbfuncion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seno", "Coseno", "Tangente", "Contangente", "Secante", "Cosecante" }));
        add(cbfuncion);
        cbfuncion.setBounds(390, 190, 123, 26);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Escoge la funcion trigonometrica");
        add(jLabel1);
        jLabel1.setBounds(340, 150, 228, 20);

        btncalcular.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncalcular.setText("Calcular");
        btncalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalcularActionPerformed(evt);
            }
        });
        add(btncalcular);
        btncalcular.setBounds(20, 440, 87, 29);

        txtconstante.setMaximumSize(new java.awt.Dimension(55, 22));
        txtconstante.setMinimumSize(new java.awt.Dimension(55, 22));
        txtconstante.setPreferredSize(new java.awt.Dimension(55, 22));
        txtconstante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtconstanteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtconstanteKeyTyped(evt);
            }
        });
        add(txtconstante);
        txtconstante.setBounds(12, 93, 55, 22);

        txtgrado1.setMaximumSize(null);
        txtgrado1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado1KeyTyped(evt);
            }
        });
        add(txtgrado1);
        txtgrado1.setBounds(74, 93, 55, 22);

        txtgrado2.setMaximumSize(null);
        txtgrado2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado2KeyTyped(evt);
            }
        });
        add(txtgrado2);
        txtgrado2.setBounds(136, 93, 55, 22);

        txtgrado3.setMaximumSize(null);
        txtgrado3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgrado3ActionPerformed(evt);
            }
        });
        txtgrado3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado3KeyTyped(evt);
            }
        });
        add(txtgrado3);
        txtgrado3.setBounds(198, 93, 55, 22);

        txtgrado4.setMaximumSize(null);
        txtgrado4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado4KeyTyped(evt);
            }
        });
        add(txtgrado4);
        txtgrado4.setBounds(260, 93, 55, 22);

        txtgrado5.setMaximumSize(null);
        txtgrado5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado5KeyTyped(evt);
            }
        });
        add(txtgrado5);
        txtgrado5.setBounds(322, 93, 55, 22);

        txtgrado6.setMaximumSize(null);
        txtgrado6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtgrado6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtgrado6KeyTyped(evt);
            }
        });
        add(txtgrado6);
        txtgrado6.setBounds(390, 93, 55, 22);

        txtintervalo1.setPreferredSize(new java.awt.Dimension(55, 22));
        txtintervalo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtintervalo1ActionPerformed(evt);
            }
        });
        txtintervalo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtintervalo1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtintervalo1KeyTyped(evt);
            }
        });
        add(txtintervalo1);
        txtintervalo1.setBounds(20, 310, 55, 22);

        txtintervalo2.setPreferredSize(new java.awt.Dimension(55, 22));
        txtintervalo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtintervalo2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtintervalo2KeyTyped(evt);
            }
        });
        add(txtintervalo2);
        txtintervalo2.setBounds(130, 310, 55, 22);

        txtnumerador1.setPreferredSize(new java.awt.Dimension(55, 22));
        txtnumerador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumerador1ActionPerformed(evt);
            }
        });
        txtnumerador1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnumerador1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnumerador1KeyTyped(evt);
            }
        });
        add(txtnumerador1);
        txtnumerador1.setBounds(250, 300, 55, 22);

        txtdenominador1.setPreferredSize(new java.awt.Dimension(55, 22));
        txtdenominador1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdenominador1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdenominador1KeyTyped(evt);
            }
        });
        add(txtdenominador1);
        txtdenominador1.setBounds(250, 340, 55, 22);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        add(jSeparator1);
        jSeparator1.setBounds(250, 330, 60, 10);

        lblIntervalo3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIntervalo3.setText("Intervalo 1");
        lblIntervalo3.setToolTipText("");
        add(lblIntervalo3);
        lblIntervalo3.setBounds(20, 270, 100, 20);

        lblIntervalo4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIntervalo4.setText("Intervalo 2");
        lblIntervalo4.setToolTipText("");
        add(lblIntervalo4);
        lblIntervalo4.setBounds(120, 270, 110, 20);

        rbtnpirad.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rbtnpirad.setText("π radian");
        rbtnpirad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnpiradActionPerformed(evt);
            }
        });
        add(rbtnpirad);
        rbtnpirad.setBounds(90, 180, 110, 33);

        txtnumerador2.setPreferredSize(new java.awt.Dimension(55, 22));
        txtnumerador2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumerador2ActionPerformed(evt);
            }
        });
        txtnumerador2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnumerador2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnumerador2KeyTyped(evt);
            }
        });
        add(txtnumerador2);
        txtnumerador2.setBounds(350, 300, 55, 22);

        txtdenominador2.setPreferredSize(new java.awt.Dimension(55, 22));
        txtdenominador2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdenominador2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdenominador2KeyTyped(evt);
            }
        });
        add(txtdenominador2);
        txtdenominador2.setBounds(350, 340, 55, 22);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        add(jSeparator2);
        jSeparator2.setBounds(350, 330, 60, 10);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Selecciona el modo a manejar los intervalos");
        add(jLabel2);
        jLabel2.setBounds(20, 150, 310, 20);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Radianes");
        add(jLabel3);
        jLabel3.setBounds(60, 230, 90, 25);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("π radian");
        add(jLabel4);
        jLabel4.setBounds(300, 230, 80, 25);
    }// </editor-fold>//GEN-END:initComponents

    private void txterrorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txterrorKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txterrorKeyTyped

    private void txtredondeoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtredondeoKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtredondeoKeyTyped

    private void btncalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalcularActionPerformed
        // TODO add your handling code here:

        count = 0;
        intervalo1=0;intervalo2=0;err=0;XRN=0;xr=0;
        String Valor = txtconstante.getText();//constate
        String Valor1 = txtgrado1.getText();//grado 1
        String Valor2 = txtgrado2.getText();//grado 2
        String Valor3 = txtgrado3.getText();//grado 3
        String Valor4 = txtgrado4.getText();//grado 4
        String Valor5 = txtgrado5.getText();//grado 5
        String Valor6 = txtgrado6.getText();//grado 6
        String error = txterror.getText();

        valor = Double.parseDouble(Valor);//conversion
        //System.out.println("VALORD: "+valor);
        valor1 = Double.parseDouble(Valor1);
        //System.out.println("Valor 1d: "+valor1);
        valor2 = Double.parseDouble(Valor2);
        //System.out.println("Valor 2d: "+valor2);
        valor3 = Double.parseDouble(Valor3);
        //System.out.println("ValorD3333333333333333: "+valor3);
        valor4 = Double.parseDouble(Valor4);
        valor5 = Double.parseDouble(Valor5);
        valor6 = Double.parseDouble(Valor6);

        if (rbtnpirad.isSelected()) {

            String op3 = txtnumerador1.getText();
            Double numerador1 = Double.parseDouble(op3);
            String op4 = txtdenominador1.getText();
            Double denominador1 = Double.parseDouble(op4);

            intervalo1 = (numerador1 / denominador1) * Math.PI;

            String op5 = txtnumerador2.getText();
            Double numerador2 = Double.parseDouble(op5);
            String op6 = txtdenominador2.getText();
            Double denominador2 = Double.parseDouble(op6);

            intervalo2 = (numerador2 / denominador2) * Math.PI;

        } else {

            String Xa = txtintervalo1.getText(); //xa=x0//llamamos el dato txtintervalo y lo metemos en una variable string
            intervalo1 = Double.parseDouble(Xa);//convertimos de string a double

            String Xb = txtintervalo2.getText(); //xb= x1
            intervalo2 = Double.parseDouble(Xb);

        }

        // REDONDEO 
        String REDO = txtredondeo.getText();
        redondeo = Integer.parseInt(REDO);

        ERROR = Double.parseDouble(error);
        System.out.println("ERRR: " + ERROR);
        int se = cbfuncion.getSelectedIndex();
        switch (se) {//ojo con la variable raiz final 
            case 0://seno
                System.out.println("entraste al caso 0");
                seno();
                break;
            case 1://coseno
                coseno();
                break;
            case 2://tangente
                tangente();
                break;
            case 3://contangente
                contangente();
                break;
            case 4://Secante
                secante();
                break;
            case 5://Cosecante
                cosecante();
                break;
            default:
                throw new AssertionError();
        }

    }//GEN-LAST:event_btncalcularActionPerformed

    public void seno() {//ya esta
        System.out.println("------CONTADOR-----: " + count);
        fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar();
            }

        }

    }

    public void coseno() {//ya esta
        System.out.println("------CONTADOR-----: " + count);
        fxa = Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = Math.cos((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa2();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar2();
            }

        }

    }

    public void tangente() {//ya esta
        System.out.println("------CONTADOR-----: " + count);
        fxa = Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = Math.tan((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa3();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar3();
            }

        }

    }

    public void contangente() {
        System.out.println("------CONTADOR-----: " + count);
        fxa = (1 / Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = (1 / Math.tan((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor));
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa4();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar4();
            }

        }

    }

    public void secante() {
        System.out.println("------CONTADOR-----: " + count);
        fxa = (1 / Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = (1 / Math.cos((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor));
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa5();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar5();
            }

        }

    }

    public void cosecante() {//cosecante
        System.out.println("------CONTADOR-----: " + count);
        fxa = (1 / Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
        //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor);
        System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));

        fxb = (1 / Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor));
        System.out.println("fxb: " + String.format("%." + redondeo + "f", fxb));//0

        if (fxa == 0) {//**************
            System.out.println("El valor ya se encontro fxa");
            System.out.println("El valor es: " + intervalo1 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxa));
            return;
        } else if (fxb == 0) {
            System.out.println("El valor ya se encontro fxb");
            System.out.println("El valor es: " + intervalo2 + " Su RAIZ: " + String.format("%." + redondeo + "f", fxb));
            return;
        }//-*********************
        comp = fxa * fxb;
        System.out.println("comp: " + comp);

        if (comp < 0) {
            System.out.println("Si es el Intervalo");
            System.out.println("Intervalo xa: " + intervalo1);
            System.out.println("Intervalo xb: " + intervalo2);
            //primera aproximscion de la raiz
            regla_falsa6();
            //Punto Medio
        } else {

            System.out.println("Intenta de Nuevo Por favor: ");
            int s = 0;
            s = JOptionPane.showConfirmDialog(null, "¿quiere seguir con las iteraciones?", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            if (s == JOptionPane.NO_OPTION) {
                int seg = 0;
                seg = JOptionPane.showConfirmDialog(null, " ¿Seguro que deseas salir? vas a finalizar el programa", "Atencion", JOptionPane.YES_NO_OPTION);
                if (seg == JOptionPane.NO_OPTION) {

                } else {
                    JOptionPane.showMessageDialog(null, " Terminaste", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

                return;

            } else if (s == JOptionPane.CANCEL_OPTION) {

            } else {
                continuar6();
            }

        }

    }

    public void regla_falsa() {//ya quedo

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }

    public void continuar() {//ya esta
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }

    public void continuar2() {//fuerza cos ya esta
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083

        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("Error: " + err);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;

            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            //continue;//salta ala otra iteracion
            err = (Math.abs((XRN - intervalo1) / XRN) * 100);

            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }

    public void continuar3() {//YA ESTA LISTO
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }//listo

    public void regla_falsa2() {//coseno ya esta

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//cos

    public void regla_falsa3() {//tan confirmar

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//TANGENTE

    public void regla_falsa4() {//contangente

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + XRN);//PUSIMOS XRN PORQUE SOLO ES EN FORMULAR NORMAL Y XR EN FORZAR
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//CONTANGENTE

    public void continuar4() {//contangente forzada
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.tan(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }

    public void continuar5() {//secante forzada
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }//secante forzada

    public void continuar6() {//cosecante forzada
        // Math.sin(fxa);
        // fxa = Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor);
        //System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
        //fxb = Math.sin((valor6 * (Math.pow(intervalo2, 6))) + (valor5 * (Math.pow(intervalo2, 5))) + (valor4 * (Math.pow(intervalo2, 4))) + (valor3 * (Math.pow(intervalo2, 3))) + (valor2 * (Math.pow(intervalo2, 2))) + ((valor1 * (Math.pow(intervalo2, 1)))) + valor);
        //System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        //System.out.println("xr: "+xr);
        do {
            intervalo1 = xr;
            count++;
            System.out.println("------CONTADOR-----: " + count);
            System.out.println("fxa 2: " + String.format("%." + redondeo + "f", fxa));
            System.out.println("fxb 2: " + String.format("%." + redondeo + "f", fxb));
            System.out.println("Raiz " + String.format("%." + redondeo + "f", xr));
            System.out.println("error " + String.format("%." + redondeo + "f", err));

            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));

            //System.out.println("fxa 3: " + String.format("%." + redondeo + "f", fxa));
            // System.out.println("fxb 3: " + String.format("%." + redondeo + "f", fxb));
// System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            //XRNV = XRN;
            //se hace la formula iterativva XRN
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            //System.out.println("XRN: " + String.format("%." + redondeo + "f", XRN));//0
            xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));
            //System.out.println(xr);
            //System.out.println("fxa: " + fxa);

            err = (Math.abs((XRN - intervalo1) / XRN) * 100);
            //System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + xr);
                System.out.println("tu error final " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

            //count++;
        } while (count <= 100);

    }//secante forzada

    public void regla_falsa5() {//SECANTE

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.cos(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + XRN);//PUSIMOS XRN PORQUE SOLO ES EN FORMULAR NORMAL Y XR EN FORZAR
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//secante

    public void regla_falsa6() {//COSECANTE

        xr = (((fxa * intervalo2) - (fxb * intervalo1)) / (fxa - fxb));//aproximacion -0.083
        System.out.println("xr: " + xr);
        intervalo1 = xr;
        do {
            count++;
            System.out.println("------CONTADOR-----: " + count);
            //xa se calcula para sacar el valor de fxa en su ecuacion
            //fxa = ((valor6* (Math.pow(xa, 6))) +(valor5* (Math.pow(xa, 5))) +(valor4* (Math.pow(xa, 4))) +(valor3* (Math.pow(xa, 3))) + (valor2 * (Math.pow(xa, 2))) + ((valor1 * (Math.pow(xa, 1)))) + valor); //2.0827
            fxa = (1 / Math.sin(valor6 * (Math.pow(intervalo1, 6)) + valor5 * (Math.pow(intervalo1, 5)) + valor4 * (Math.pow(intervalo1, 4)) + valor3 * (Math.pow(intervalo1, 3)) + valor2 * (Math.pow(intervalo1, 2)) + valor1 * (Math.pow(intervalo1, 1)) + valor));
            System.out.println("fxa: " + String.format("%." + redondeo + "f", fxa));//0
            XRNV = XRN;

            //se hace la formula iterativva XRN
            //xrn
            XRN = intervalo2 - (((fxb * intervalo1) - (fxb * intervalo2)) / (fxa - fxb));
            System.out.println("XRN:Raiz: " + String.format("%." + redondeo + "f", XRN));//0

            //System.out.println("fxa: " + fxa);
            err = (Math.abs((XRN - XRNV) / XRN) * 100);
            System.out.println("Error: " + err);
            if (err <= ERROR) {
                count++;
                System.out.println("------CONTADOR------: " + count);
                System.out.println("Raiz final: " + XRN);//PUSIMOS XRN PORQUE SOLO ES EN FORMULAR NORMAL Y XR EN FORZAR
                System.out.println("tu error final " + err);
                //System.out.println("tu error es " + err);
                return;
            } else {
                intervalo1 = XRN;
            }

        } while (count <= 100);
    }//secante

    private void txtconstanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconstanteKeyReleased
        // TODO add your handling code here:
        //txtConstanteKeyReleased(evt);
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtconstante.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtconstanteKeyReleased

    private void txtconstanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconstanteKeyTyped

    }//GEN-LAST:event_txtconstanteKeyTyped

    private void txtgrado1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado1KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado1.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado1KeyReleased

    private void txtgrado1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado1KeyTyped

    }//GEN-LAST:event_txtgrado1KeyTyped

    private void txtgrado2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado2KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado2.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado2KeyReleased

    private void txtgrado2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado2KeyTyped

    }//GEN-LAST:event_txtgrado2KeyTyped

    private void txtgrado3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgrado3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgrado3ActionPerformed

    private void txtgrado3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado3KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado3.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado3KeyReleased

    private void txtgrado3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado3KeyTyped

    }//GEN-LAST:event_txtgrado3KeyTyped

    private void txtgrado4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado4KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado4.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado4KeyReleased

    private void txtgrado4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado4KeyTyped

    }//GEN-LAST:event_txtgrado4KeyTyped

    private void txtgrado5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado5KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado5.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado5KeyReleased

    private void txtgrado5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado5KeyTyped

    }//GEN-LAST:event_txtgrado5KeyTyped

    private void txtgrado6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado6KeyReleased
        // TODO add your handling code here:
        String nombre = "^[-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtgrado6.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);
            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);
        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);
            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);
            return;
        }
    }//GEN-LAST:event_txtgrado6KeyReleased

    private void txtgrado6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgrado6KeyTyped

    }//GEN-LAST:event_txtgrado6KeyTyped

    private void txtintervalo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtintervalo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtintervalo1ActionPerformed

    private void txtintervalo1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo1KeyReleased
        // TODO add your handling code here:

        String nombre = "^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtintervalo1.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);

            txtintervalo2.setEnabled(true);
            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);

        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);

            txtintervalo2.setEnabled(false);
            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);

            return;
        }
    }//GEN-LAST:event_txtintervalo1KeyReleased

    private void txtintervalo1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo1KeyTyped

    }//GEN-LAST:event_txtintervalo1KeyTyped

    private void txtintervalo2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo2KeyReleased
        // TODO add your handling code here:

        String nombre = "^[+-]?[0-9]{1,9}(?:\\.[0-9]{1,10})?$";
        Pattern patron = Pattern.compile(nombre);
        Matcher match = patron.matcher(txtintervalo2.getText());
        if (match.find()) {
            btncalcular.setEnabled(true);

            txterror.setEnabled(true);
            btncalcular.setEnabled(true);
            txtredondeo.setEnabled(true);
            btncalcular.setEnabled(true);

        } else {
            //JOptionPane.showMessageDialog(this, "NO CARACTER ESPECIAL", "ERROR", JOptionPane.ERROR_MESSAGE);
            btncalcular.setEnabled(false);

            txterror.setEnabled(false);
            btncalcular.setEnabled(false);
            txtredondeo.setEnabled(false);

            return;
        }
    }//GEN-LAST:event_txtintervalo2KeyReleased

    private void txtintervalo2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtintervalo2KeyTyped

    }//GEN-LAST:event_txtintervalo2KeyTyped

    private void txtnumerador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumerador1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerador1ActionPerformed

    private void txtnumerador1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumerador1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerador1KeyReleased

    private void txtnumerador1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumerador1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerador1KeyTyped

    private void txtdenominador1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdenominador1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdenominador1KeyReleased

    private void txtdenominador1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdenominador1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdenominador1KeyTyped

    private void txtnumerador2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumerador2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerador2ActionPerformed

    private void txtnumerador2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumerador2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerador2KeyReleased

    private void txtnumerador2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnumerador2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumerador2KeyTyped

    private void txtdenominador2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdenominador2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdenominador2KeyReleased

    private void txtdenominador2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdenominador2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdenominador2KeyTyped

    private void rbtnpiradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnpiradActionPerformed
        // TODO add your handling code here:

        if (rbtnpirad.isSelected()) {

            txtintervalo1.setEnabled(false);
            txtintervalo2.setEnabled(false);
            txtnumerador1.setEnabled(true);
            txtnumerador2.setEnabled(true);
            txtdenominador1.setEnabled(true);
            txtdenominador2.setEnabled(true);
        } else {

            txtintervalo1.setEnabled(true);
            txtintervalo2.setEnabled(true);
            txtnumerador1.setEnabled(false);
            txtnumerador2.setEnabled(false);
            txtdenominador1.setEnabled(false);
            txtdenominador2.setEnabled(false);

        }


    }//GEN-LAST:event_rbtnpiradActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncalcular;
    private javax.swing.JComboBox<String> cbfuncion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblConstante;
    private javax.swing.JLabel lblDecimales;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblGrado1;
    private javax.swing.JLabel lblGrado2;
    private javax.swing.JLabel lblGrado3;
    private javax.swing.JLabel lblGrado4;
    private javax.swing.JLabel lblGrado5;
    private javax.swing.JLabel lblGrado6;
    private javax.swing.JLabel lblIntervalo1;
    private javax.swing.JLabel lblIntervalo2;
    private javax.swing.JLabel lblIntervalo3;
    private javax.swing.JLabel lblIntervalo4;
    private javax.swing.JRadioButton rbtnpirad;
    private javax.swing.JTextField txtconstante;
    private javax.swing.JTextField txtdenominador1;
    private javax.swing.JTextField txtdenominador2;
    private javax.swing.JTextField txterror;
    private javax.swing.JTextField txtgrado1;
    private javax.swing.JTextField txtgrado2;
    private javax.swing.JTextField txtgrado3;
    private javax.swing.JTextField txtgrado4;
    private javax.swing.JTextField txtgrado5;
    private javax.swing.JTextField txtgrado6;
    private javax.swing.JTextField txtintervalo1;
    private javax.swing.JTextField txtintervalo2;
    private javax.swing.JTextField txtnumerador1;
    private javax.swing.JTextField txtnumerador2;
    private javax.swing.JTextField txtredondeo;
    // End of variables declaration//GEN-END:variables
}
